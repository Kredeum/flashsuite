{
  "version": 3,
  "file": "flashpos.css",
  "sources": [
    "connect.svelte",
    "container.svelte",
    "dashboard.svelte",
    "flashpos.svelte",
    "listbox.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Metamask from \"./metamask.svelte\";\n  import { signer } from \"./metamask.mjs\";\n\n  const truncateAddress = (_address) => (_address ? _address.substr(0, 6) + \"...\" + _address.substring(_address.length - 4, _address.length) : \"\");\n</script>\n\n<div href=\"#\" class=\"headerbutton w-inline-block\">\n  <div class=\"frostedglasswrapper left\">\n    <div class=\"frostedglasseffect notfixed\" />\n    <div class=\"blockcontents\">\n      {#if $signer}\n        <div id=\"identiconAddressImage\" class=\"buttondisk fs-account-icon-wrapper\">\n          <img src=\"images/account_icon.svg\" loading=\"lazy\" id=\"platformLogo\" alt=\"\" class=\"placeholderimage {$signer ? 'address-icon' : 'no-address-icon'}\" />\n        </div>\n      {/if}\n      <div id=\"userAddressSet\" class=\"textdarkmode\">\n        {#if $signer !== \"\"}\n          <span>{truncateAddress($signer.toString())}</span>\n        {:else}\n          <span class=\"connect-text\">Connect wallet</span>\n        {/if}\n      </div>\n    </div>\n  </div>\n</div>\n\n<Metamask />\n\n<style>\n  .connect-text {\n    cursor: pointer;\n  }\n\n  .fs-account-icon-wrapper {\n    display: flex;\n    justify-content: center;\n  }\n  .address-icon {\n    width: 80%;\n  }\n\n  .no-address-icon {\n    opacity: 0;\n  }\n</style>\n",
    "<script>\n  import Connect from \"./connect.svelte\";\n</script>\n\n<div class=\"nnavbar\">\n  <div class=\"nnavbarcontents\">\n    <Connect  />\n  </div>\n</div>\n<div class=\"headermain fs-headermain\">\n  <slot />\n</div>\n\n<style>\n  .nnavbar {\n    position: absolute;\n    left: 0%;\n    top: 6%;\n    right: 0%;\n    bottom: auto;\n    z-index: 2;\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -ms-flexbox;\n    display: flex;\n    width: 100%;\n    height: 55px;\n    padding-bottom: 0px;\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n    -webkit-flex-direction: row;\n    -ms-flex-direction: row;\n    flex-direction: row;\n    -webkit-box-pack: center;\n    -webkit-justify-content: center;\n    -ms-flex-pack: center;\n    justify-content: center;\n    -webkit-box-align: center;\n    -webkit-align-items: center;\n    -ms-flex-align: center;\n    align-items: center;\n    background-color: transparent;\n    box-shadow: none;\n  }\n\n  .nnavbarcontents {\n    position: fixed;\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -ms-flexbox;\n    display: flex;\n    width: 100%;\n    max-width: 1400px;\n    margin-right: 0px;\n    margin-left: 0px;\n    padding-right: 140px;\n    padding-left: 140px;\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n    -webkit-flex-direction: row;\n    -ms-flex-direction: row;\n    flex-direction: row;\n    -webkit-box-pack: end;\n    -webkit-justify-content: flex-end;\n    -ms-flex-pack: end;\n    justify-content: flex-end;\n    -webkit-box-align: center;\n    -webkit-align-items: center;\n    -ms-flex-align: center;\n    align-items: center;\n    -webkit-align-self: stretch;\n    -ms-flex-item-align: stretch;\n    align-self: stretch;\n    -webkit-box-flex: 0;\n    -webkit-flex: 0 0 auto;\n    -ms-flex: 0 0 auto;\n    flex: 0 0 auto;\n  }\n\n  .headermain {\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -ms-flexbox;\n    display: flex;\n    height: 100%;\n    min-height: 100vh;\n    margin-bottom: 0px;\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n    -webkit-flex-direction: column;\n    -ms-flex-direction: column;\n    flex-direction: column;\n    -webkit-box-pack: center;\n    -webkit-justify-content: center;\n    -ms-flex-pack: center;\n    justify-content: center;\n    -webkit-box-align: center;\n    -webkit-align-items: center;\n    -ms-flex-align: center;\n    align-items: center;\n    background-image: url(\"../images/Synth-BG-Header-Hi.png\");\n    background-position: 50% 50%;\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-attachment: fixed;\n  }\n\n  .fs-headermain {\n    padding-top: 10%;\n    padding-bottom: 10%;\n  }\n\n  @media screen and (max-width: 479px) {\n    .nnavbarcontents {\n      margin-right: 20px;\n      margin-left: 20px;\n    }\n  }\n\n  @media screen and (max-width: 991px) {\n    .nnavbarcontents {\n      margin-right: 40px;\n      margin-left: 40px;\n    }\n  }\n\n  @media screen and (min-width: 1920px) {\n    .nnavbarcontents {\n      padding-right: 0px;\n      padding-left: 0px;\n      -webkit-box-pack: end;\n      -webkit-justify-content: flex-end;\n      -ms-flex-pack: end;\n      justify-content: flex-end;\n    }\n  }\n</style>\n",
    "<script>\n  import { ethers, BigNumber } from 'ethers';\n  import aaveDashboard from '../lib/aaveDashboard.mjs';\n  import { Dashboards, handleHealthFactors } from './dashboards.mjs';\n  import ListBox from './listbox.svelte';\n\n  export let isorigin = true;\n  export let address = '';\n  export let other = '';\n\n  export let ribbonMessage = '';\n\n  const chekboxDefault = false;\n  let healthFactor = '_';\n  let healthFactorNext = '_';\n\n  $: address && handleGetDashboard();\n  $: $handleHealthFactors && handleHealthFactor();\n\n  function getTokenLogo(symbol) {\n    let ret = 'images/assets/no_logo.svg';\n\n    const coins = [\n      'DAI',\n      'USDC',\n      'TUSD',\n      'USDT',\n      'sUSD',\n      'BUSD',\n      'ETH',\n      'AAVE',\n      'LEND',\n      'UNI',\n      'YFI',\n      'BAT',\n      'REN',\n      'REP',\n      'ENJ',\n      'KNC',\n      'LINK',\n      'MANA',\n      'MKR',\n      'SNX',\n      'WBTC',\n      'ZRX',\n    ];\n    for (const coin of coins) {\n      if (symbol.includes(coin.toLocaleUpperCase())) ret = `images/assets/${coin.toLowerCase()}_logo.svg`;\n    }\n    return ret;\n  }\n  function _bal(_balance, _decimals = 18, _precision = 3) {\n    const [ent, dec] = ethers.utils.formatUnits(_balance, _decimals).split('.');\n    return ent + '.' + dec.substring(0, _precision);\n  }\n  function _hf(_healthFactor) {\n    let ret;\n    if (_healthFactor === '_' || _healthFactor === '∞') {\n      ret = _healthFactor;\n    } else {\n      const hf = _bal(_healthFactor);\n      const bhf = BigNumber.from(_healthFactor);\n      let warning = '';\n      if (bhf.eq(0)) {\n        warning = '⛔';\n      } else if (bhf.lt(BigNumber.from(10).pow(17).mul(8))) {\n        warning = '**';\n      } else if (bhf.lt(BigNumber.from(10).pow(17).mul(12))) {\n        ret = '*';\n      }\n      ret = warning + hf + warning;\n      if (warning) console.log(`Your ${isorigin ? 'Origin' : 'Destination'} Next Health Factor -> ${healthFactorNext} <- is tool low, please adjust`);\n    }\n\n    return ret;\n  }\n\n  async function handleHealthFactor() {\n    const origin = isorigin ? address : other;\n    const destination = isorigin ? other : address;\n    const dbOrigin = origin && $Dashboards[origin];\n    const dbDestination = destination && $Dashboards[destination];\n\n    if (isorigin) {\n      if (dbOrigin) {\n        ({ healthFactor, healthFactorUnchecked: healthFactorNext } = await aaveDashboard.getHealthFactors(dbOrigin));\n      }\n    } else {\n      if (dbDestination) {\n        ({ healthFactor } = await aaveDashboard.getHealthFactors(dbDestination));\n        ({ healthFactor: healthFactorNext } = await aaveDashboard.getHealthFactors2(dbOrigin, dbDestination));\n      } else {\n        if (dbOrigin) {\n          ({ healthFactorChecked: healthFactorNext } = await aaveDashboard.getHealthFactors(dbOrigin));\n        }\n      }\n    }\n    // console.log('HF calc', isorigin ? 'origin' : 'destination', healthFactor, '|', healthFactorNext, '|', address);\n  }\n\n  function setChecked(_symbol, _checked) {\n    const idToken = $Dashboards[address].findIndex((db) => db.symbol == _symbol);\n    if (idToken >= 0) $Dashboards[address][idToken].checked = _checked;\n  }\n  function handleClick(_symbol, _checked) {\n    if (isorigin) {\n      setChecked(_symbol, !_checked);\n      $handleHealthFactors++;\n    }\n  }\n  export async function handleGetDashboard() {\n    if (address) {\n      const oldDashboard = $Dashboards[address];\n\n      const _provider = new ethers.providers.Web3Provider(window.ethereum);\n      $Dashboards[address] = await aaveDashboard.getUserData(address, _provider);\n      if (oldDashboard) {\n        for (const position of oldDashboard) {\n          setChecked(position.symbol, position.checked);\n        }\n      } else {\n        for (const position of $Dashboards[address]) {\n          setChecked(position.symbol, chekboxDefault);\n        }\n      }\n      $handleHealthFactors++;\n      console.log('DASHBOARD', address, $Dashboards[address]);\n    }\n  }\n</script>\n\n<main>\n  <div id=\"OriginPosition\" class=\"fs-col-origin columnposition w-col w-col-6 w-col-stack w-col-small-small-stack\" style=\"min-height: 220px; height: 100%\">\n    <div class=\"columntitlebar reverse\" class:reverse={!isorigin}>\n      <h2 id=\"columnTitle\">{isorigin ? 'Origin' : 'Destination'}</h2>\n      <ListBox bind:address exclude={other} />\n    </div>\n    <div class=\"fs-ribbon-container\">\n      {#if isorigin && ribbonMessage}\n        <div id=\"userMessagePurple\" class=\"usermessagesbar\">\n          <div id=\"userMessagePurpleText\" class=\"textdarkmode usermessage\">\n            {ribbonMessage}\n          </div>\n        </div>\n      {/if}\n    </div>\n    <div>\n      {#if $Dashboards[address]}\n        <div id=\"gridOrigin\" class=\"w-layout-grid gridorigin fs-grid-dashboard\">\n          <h3 class=\"left\">Your Deposits</h3>\n          <h3 class=\"right\">Your Loans</h3>\n\n          <div class=\"fs-item-container\">\n            {#each $Dashboards[address] as item}\n              {#if item.type == 0}\n                <div\n                  class:checked={item.checked}\n                  class:fs-dashboard-item__origin={isorigin}\n                  class=\"deposititem fs-deposit-item\"\n                  on:click={() => handleClick(item.symbol, item.checked)}\n                  value={item.symbol}\n                  checked={item.checked}\n                >\n                  <div class=\"tokendetails\">\n                    <div id=\"platformAddressLogo\" class=\"buttondisk fs-buttondisk\">\n                      <img src={getTokenLogo(item.symbol)} loading=\"lazy\" id=\"tokenLogoDep01ORG\" alt=\"\" class=\"placeholderimage\" />\n                    </div>\n                    <div id=\"tokenSymbolDep01ORG\" class=\"textlightmode label\">\n                      {item.symbol}\n                    </div>\n                  </div>\n                  <div class=\"readonlyfield\">\n                    <div id=\"amountDep01ORG\" class=\"textlightmode numbers\">\n                      {_bal(item.amount, item.decimals)}\n                    </div>\n                  </div>\n                  {#if isorigin}\n                    <div class=\"fs-checkmark\">\n                      {#if item.checked}\n                        <img src=\"images/checked_purple.svg\" loading=\"lazy\" alt=\"\" />\n                      {:else}\n                        <img src=\"images/unchecked_purple.svg\" loading=\"lazy\" alt=\"\" />\n                      {/if}\n                    </div>\n                  {/if}\n                </div>\n              {/if}\n            {/each}\n          </div>\n\n          <div class=\"fs-item-container\">\n            {#each $Dashboards[address] as item}\n              {#if item.type > 0}\n                <div\n                  class:checked={item.checked}\n                  class:fs-dashboard-item__origin={isorigin}\n                  class=\"loanitem fs-dashboard-item  fs-loan-item\"\n                  on:click={() => handleClick(item.symbol, item.checked)}\n                  value={item.symbol}\n                  checked={item.checked}\n                >\n                  <div class=\"tokendetails reverse\">\n                    <div id=\"platformAddressLogo\" class=\"buttondisk reverse\">\n                      <img src={getTokenLogo(item.symbol)} loading=\"lazy\" id=\"tokenLogoLoan01ORG\" alt=\"\" class=\"placeholderimage\" />\n                    </div>\n                    <div id=\"tokenSymbolLoan01\" class=\"textlightmode\">\n                      {item.symbol}\n                    </div>\n                  </div>\n                  <div class=\"readonlyfield\">\n                    <div id=\"amountLoan01ORG\" class=\"textlightmode numbers\">\n                      {_bal(item.amount, item.decimals)}\n                    </div>\n                  </div>\n                  {#if isorigin}\n                    <div class=\"fs-checkmark\">\n                      {#if item.checked}\n                        <img src=\"images/checked_white.svg\" loading=\"lazy\" alt=\"\" />\n                      {:else}\n                        <img src=\"images/unchecked_white.svg\" loading=\"lazy\" alt=\"\" />\n                      {/if}\n                    </div>\n                  {/if}\n                </div>\n                <div id=\"APRLoan01ORG\" class=\"ratesinfo w-node-9c5920cd5a3d-3e5b97ee\">\n                  <div id=\"tokenSymbolDep01ORG\" class=\"textlightmode rates\">\n                    {item.type == 2 ? 'Variable rate' : 'Stable rate'}\n                  </div>\n                </div>\n              {/if}\n            {/each}\n          </div>\n        </div>\n      {:else}\n        <p class=\"fs-bottom-container\">NO POSITIONS</p>\n      {/if}\n    </div>\n\n    <div class=\"fs-bottom-container\">\n      <div id=\"healthFactorInfoORG\" class=\"healthfactorinfo\">\n        <div class=\"hfcontents origin\" style=\"display: block;\">\n          <p class=\"textlightmode rates fs-hf\">\n            Current Health Factor : {_hf(healthFactor, 18)}\n          </p>\n          <p class=\"textlightmode rates fs-hf\">\n            <span> Next Health Factor: </span>\n            {_hf(healthFactorNext, 18)}\n          </p>\n        </div>\n      </div>\n      <div id=\"clearALL\" class=\"secondarybutton cursor-pointer\">\n        <div on:click={handleGetDashboard} id=\"refreshFlashPos\" class=\"textlightmode button\">Refresh Dashboard</div>\n      </div>\n    </div>\n  </div>\n  <!-- address {address}\n  <br />other {other} -->\n</main>\n\n<style>\n  main {\n    width: 100%;\n    margin: 0 auto;\n    margin-right: 5px;\n    margin-left: 5px;\n  }\n\n  .usermessagesbar {\n    display: block;\n  }\n\n  .fs-ribbon-container {\n    min-height: 24px;\n  }\n\n  .fs-grid-dashboard {\n    min-width: 400px;\n  }\n  .fs-item-container {\n    display: flex;\n    flex-direction: column;\n  }\n\n  .fs-dashboard-item__origin {\n    align-items: center;\n    cursor: pointer;\n  }\n\n  .fs-deposit-item {\n    margin-bottom: 24px;\n  }\n\n  .fs-deposit-item.checked {\n    -webkit-box-shadow: inset 0px 0px 0px 1px #a04bce;\n    -moz-box-shadow: inset 0px 0px 0px 1px #a04bce;\n    box-shadow: inset 0px 0px 0px 1px #a04bce;\n  }\n  .fs-loan-item.checked {\n    -webkit-box-shadow: inset 0px 0px 0px 1px #969696;\n    -moz-box-shadow: inset 0px 0px 0px 1px #969696;\n    box-shadow: inset 0px 0px 0px 1px #969696;\n  }\n\n  .fs-bottom-container {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-top: auto;\n  }\n\n  .fs-hf {\n    text-align: left;\n  }\n\n  /* overrides */\n\n  .buttondisk {\n    flex-shrink: 0;\n    height: 42px;\n    width: 42px;\n  }\n\n  .gridorigin {\n    grid-template-rows: auto auto;\n  }\n  img {\n    max-width: 100%;\n  }\n\n  .cursor-pointer {\n    cursor: pointer;\n  }\n</style>\n",
    "<script>\n  import { ethers } from 'ethers';\n  import { onMount } from 'svelte';\n  import FlashPosContract from '../lib/contracts/FlashPos.mjs';\n  import Dashboard from './dashboard.svelte';\n  import { Dashboards } from './dashboards.mjs';\n  import Container from './container.svelte';\n  import { signer, addresses, chainId } from './metamask.mjs';\n\n  // exports Metamask\n  let signerBalance = 0;\n  let provider;\n\n  let origin = '';\n  let destination = '';\n  let originComponent;\n\n  onMount(async function () {\n    // console.log('FLASHPOS ONMOUNT');\n    provider = ethers.getDefaultProvider('kovan', {\n      etherscan: 'D2VVP49VXFTGY8WX87EES8WFDCFP62FKE7',\n      infura: '6ac00f9d600e454db045e9af71d40507',\n      alchemy: '70Tyw--U9skJ1GleOEv6RvZEYM7X7SU9',\n      // pocket: process.env.POCKET_API_KEY,\n    });\n    provider = new ethers.providers.EtherscanProvider('kovan' , 'D2VVP49VXFTGY8WX87EES8WFDCFP62FKE7' );\n    // provider = new ethers.providers.InfuraProvider('kovan' , '6ac00f9d600e454db045e9af71d40507' );\n    // provider = new ethers.providers.AlchemyProvider('kovan' , '70Tyw--U9skJ1GleOEv6RvZEYM7X7SU9' );\n    // provider = window.ethereum;\n    // provider = new ethers.providers.JsonRpcProvider('http://127.0.0.1:8545');\n\n    // console.log('PROVIDER', provider);\n    await FlashPosContract.Init(false);\n    step0();\n  });\n\n  $: ethersSigner = new ethers.providers.Web3Provider(ethereum).getSigner();\n\n  let positionsAlice = [];\n  let startMigration = false;\n  let migrationInProgress = false;\n  let step = 0;\n  let message = '';\n  let message2 = '';\n  let originMessage = '';\n  let refresh = 0;\n  let showSpinner = false;\n  let showAnimation = false;\n\n  const ethscan = 'https://kovan.etherscan.io';\n\n  function _bal(_balance, _decimals) {\n    const [ent, dec] = ethers.utils.formatUnits(_balance, _decimals).split('.');\n    return ent + '.' + dec.substring(0, 3);\n  }\n\n  // NETWORK MUST BE KOVAN\n  $: if ($chainId && $chainId.toLowerCase() != '0x2a') {\n    alert('FlashAccount is in beta mode ! only available on Kovan\\nPlease switch to the Kovan testnet');\n  }\n\n  // FIRST ADDRESS IS origin, SECOND ADDRESS BOB\n  $: if ($signer) {\n    if (!origin) {\n      origin = $signer;\n    } else if (!destination) {\n      destination = $signer;\n    }\n  }\n  function handleRefresh() {\n    refresh++;\n    // console.log('handleRefresh', refresh);\n  }\n  async function checkSigner(_label) {\n    let ret = false;\n    const addr = _label === 'Origin' ? origin : destination;\n\n    if (addr == $signer) {\n      signerBalance = await provider.getBalance($signer);\n      if (signerBalance == 0) {\n        message2 = 'ETH balance of this account is to low to proceed, you need to transfer some ETH to pay gas';\n        alert(message2);\n      } else {\n        ret = true;\n      }\n    } else {\n      console.log(`Wrong ${_label} account !`, addr, $signer);\n      message2 = `Connect your wallet with ${_label} account !`;\n      alert(message2);\n    }\n    console.log('checkSigner', addr, _label, '=>', ret);\n    return ret;\n  }\n\n  // STEP 0 : initial state\n  $: if (step == 0 && origin) step1(); // origin changed\n  // STEP 1 : origin exists\n  $: if (step == 1 && origin && $Dashboards[origin]) step2(); // dashboard origin changed\n  // STEP 2 : dashboard origin retrieved\n  // Click \"Start migration\" button\n  // STEP 3 : start migration\n  // Transfers approved\n  // STEP 4 : connect destination\n  $: if (step == 4 && destination) step4(); // destination changed\n  // STEP 5 : $signer destination defined\n  $: if (step == 5 && destination && $Dashboards[destination]) step6();\n  // STEP 6 : dashboard destination retreived\n  // Transfers approved\n  // STEP 7 : call flashloan\n  // Flashloan approval\n  // STEP 8 : flashloan succeeded\n  // Refresh dashboards\n  // STEP 9 : final state, positions migrated\n\n  async function step0() {\n    step = 0;\n    originMessage = 'Please connect to the account you want to migrate from';\n    if (origin) step1();\n  }\n  async function step1() {\n    step = 1;\n    originMessage = 'Origin account connected, retrieving AAVE positions...';\n    startMigration = false;\n    if (origin && $Dashboards[origin]) step2();\n  }\n  async function step2() {\n    step = 2;\n    originMessage = 'Select the deposits and loans you want to migrate';\n    startMigration = true;\n  }\n  async function step3() {\n    handleRefresh();\n\n    if (await checkSigner('Origin')) {\n      step = 3;\n      startMigration = false;\n      migrationInProgress = true;\n      positionsAlice = $Dashboards[origin].filter((pos) => pos.checked);\n\n      const deposits = positionsAlice.filter((pos) => pos.type == 0);\n      const nd = deposits.length;\n      try {\n        if (nd > 0) {\n          let amounts = [];\n          let txsDeposit = [];\n          let txsWait = [];\n          let ic = 0;\n          let iw = 0;\n          let ia = 0;\n\n          for (const deposit of deposits) {\n            const amount = `${_bal(deposit.amount, deposit.decimals)} ${deposit.symbol}`;\n            message = `Please approve the transfer of your ${nd} deposit${nd > 1 ? 's' : ''} with your browser wallet`;\n            txsDeposit[ic] = FlashPosContract.approveTransfer(deposit, ethersSigner);\n            amounts[ic] = amount;\n            ic++;\n          }\n          message2 = `${nd} approval transaction${nd > 1 ? 's' : ''} sent`;\n          message = `Please approve the transfer of your ${nd} deposit${nd > 1 ? 's' : ''}`;\n\n          for await (const txDeposit of txsDeposit) {\n            console.log(`TX1.${iw + 1}/${nd} CALL ${ethscan}/tx/${txDeposit.hash}`);\n            txsWait[iw] = txDeposit.wait();\n            iw++;\n          }\n          showSpinner = true;\n          for await (const tx of txsWait) {\n            message2 = `Waiting transactions completion... ${ia + 1}/${nd} deposit${nd > 1 ? 's' : ''} completed`;\n            console.log(`TX1.${ia + 1}/${nd} END`, tx);\n            ia++;\n          }\n          showSpinner = false;\n          message2 = `${nd > 1 ? 'All ' + nd + ' transactions for deposit transfer' : 'transaction for deposit transfer'}${nd > 1 ? 's' : ''} completed ✅`;\n        }\n        step4();\n      } catch (e) {\n        message2 = 'Transaction failed';\n        console.error(e);\n      }\n    }\n  }\n  async function step4() {\n    step = 4;\n    if (destination) {\n      if (destination != origin) step5();\n      else message = 'Please connect your Destination to a different account than Origin';\n    } else {\n      message = 'Please connect your Destination account';\n    }\n  }\n  async function step5() {\n    step = 5;\n    message2 = '';\n    message = 'Destination account connected, retrieving AAVE positions...';\n    showSpinner = true;\n    if (destination && $Dashboards[destination]) step6();\n  }\n  async function step6() {\n    step = 6;\n    if (await checkSigner('Destination')) {\n      showSpinner = false;\n      message2 = 'Positions of the destination account retrieved!';\n\n      const loans = positionsAlice.filter((pos) => pos.type != 0);\n      const nl = loans.length;\n      try {\n        if (nl > 0) {\n          let amounts = [];\n          let txsLoan = [];\n          let txsWait = [];\n          let ic = 0;\n          let iw = 0;\n          let il = 0;\n\n          for (const loan of loans) {\n            const amount = `${_bal(loan.amount, loan.decimals)} ${loan.symbol}`;\n            message = `Approve the ${nl > 1 ? `${nl} transactions` : 'transaction'} to borrow the loan${nl > 1 ? 's' : ''} you want to migrate`;\n            txsLoan[ic] = await FlashPosContract.approveLoan(loan, ethersSigner);\n            amounts[ic] = amount;\n            ic++;\n          }\n          showSpinner = true;\n          message = `Waiting for approval to take on ${nl} loan${nl > 1 ? 's' : ''} on behalf of the destination account`;\n          message2 = `${nl} credit delegation transaction${nl > 1 ? 's' : ''} sent`;\n          for await (const txLoan of txsLoan) {\n            console.log(`TX2.${iw + 1}/${nl} CALL ${ethscan}/tx/${txLoan.hash}`);\n            txsWait[iw] = txLoan.wait();\n            iw++;\n          }\n          for await (const tx of txsWait) {\n            message2 = `Waiting transactions completion... ${il + 1}/${nl} loan${il > 1 ? 's' : ''} transaction${nl > 1 ? 's' : ''} completed`;\n            console.log(`TX2.${il + 1}/${nl} END`, tx);\n            il++;\n          }\n          showSpinner = false;\n          message2 = `${nl > 1 ? 'All ' + nl + ' loans' : 'Loan'} transaction${nl > 1 ? 's' : ''} completed ✅`;\n        }\n        step7();\n      } catch (e) {\n        message2 = '<<< Transaction failed';\n        console.error(e);\n      }\n    } else {\n      destination = '';\n      step4();\n    }\n  }\n  async function step7() {\n    step = 7;\n    message = 'Please approve the Flash Loan transaction to complete the migration of the selected positions';\n\n    try {\n      const tx = await FlashPosContract.callFlashLoanTx(positionsAlice, origin, destination, ethersSigner);\n      console.log(`TX3 FLASH LOAN ${ethscan}/tx/${tx.hash}`);\n      message2 = '';\n      showAnimation = true;\n      message = `Flash Loan Magic in progress... please wait a few seconds`;\n      showSpinner = true;\n      const txf = await tx.wait();\n      console.log(`TX3 FLASH LOAN END`), txf;\n      step8();\n    } catch (e) {\n      showAnimation = false;\n      message2 = 'Transaction failed';\n      console.error(e);\n    }\n  }\n  async function step8() {\n    step = 8;\n    showSpinner = false;\n    showAnimation = false;\n    message = 'Migration complete! 🎉 ';\n    originComponent.handleGetDashboard();\n    setTimeout(step9, 10000);\n  }\n  async function step9() {\n    step = 9;\n    message = '';\n    message2 = '';\n    step0();\n  }\n</script>\n\n<Container>\n  <div style=\"width: 80%;\">\n    <!-- BUMPER -->\n    <div class=\"sectionbumper fs-sectionbumper\">\n      <div class=\"blockimage\">\n        <img src=\"images/FLSuite-Logo-Full-Dark.svg\" loading=\"lazy\" width=\"125\" alt=\"\" class=\"flashlogo\" />\n      </div>\n    </div>\n    <!-- CONTENTS -->\n    <div class=\"sectioncontents fs-sectioncontents\">\n      <img src=\"images/FlashPos-SubLogo-Light.svg\" loading=\"lazy\" width=\"200\" alt=\"\" class=\"sectionlogoimage\" />\n      <h1>Migrate your Aave positions</h1>\n\n      <div class=\"columnspositions fs-columnspositions w-row\">\n        <div id=\"chipFlashPos\" class=\"sectionchip fs-chip\">\n          <div id=\"amountDep02ORG\" class=\"textdarkmode button\">Position Migration</div>\n        </div>\n        <Dashboard isorigin={true} bind:address={origin} other={destination} ribbonMessage={originMessage} bind:this={originComponent} />\n        <Dashboard isorigin={false} bind:address={destination} other={origin} />\n      </div>\n      {#if showAnimation}\n        <img src=\"images/flashsuite_animation_200.gif\" style=\"width:100px;\" alt=\"flashsuite-animation\" />\n      {/if}\n      <div class=\"w-100\">\n        {#if startMigration}\n          <h1 class=\"align-center\">Ready to start migrating your positions?</h1>\n          <div class=\"buttonwrapper\">\n            <div id=\"migrateFlashPos\" class=\"mainbutton fs-mainbutton\">\n              <div on:click={step3} id=\"amountDep02ORG\" class=\"textlightmode buttodarkmode\">Start Migration</div>\n            </div>\n          </div>\n        {/if}\n        {#if true}\n          <div class=\"stepsprocesscontents\">\n            <div class=\"stepscolumnstop w-row\">\n              <div class=\"stepcolumn doingpurple w-col w-col-4\">\n                <div id=\"stepAction1\" class=\"textlightmode instep\">1. Approve deposit(s) migration</div>\n              </div>\n              <div class=\"stepcolumn w-col w-col-4 {step >= 6 ? 'doingpurple' : 'inactivegrey'}\">\n                <div id=\"stepAction2\" class=\"textlightmode instep\">2. Approve loan(s) migration</div>\n              </div>\n              <div class=\"stepcolumn w-col w-col-4 {step >= 7 ? 'doingpurple' : 'inactivegrey'}\">\n                <div id=\"stepAction3\" class=\"textlightmode instep\">3. Finalize migration</div>\n              </div>\n            </div>\n            <div class=\"actionmessage fs-actionmessage\">\n              <p id=\"stepActionLabel\" class=\"paragraph instep fs-message-2\">\n                {message2}\n              </p>\n              <div style=\"display: flex;\">\n                <p id=\"stepActionLabel\" class=\"paragraph instep fs-message-1\">\n                  {message}\n                </p>\n                {#if showSpinner}\n                  <img class=\"fs-spinner\" alt=\"spinner\" src=\"images/spinner_purple.svg\" />\n                {/if}\n              </div>\n            </div>\n          </div>\n        {/if}\n        <!-- <small>\n          step {step}<br />\n          origin {origin}<br />\n          destination {destination}<br />\n          $signer {$signer}<br />\n          signerBalance {signerBalance}<br />\n          <div on:click={handleRefresh}>refresh</div>\n        </small> -->\n      </div>\n    </div>\n  </div>\n</Container>\n\n<style>\n  .fs-sectioncontents {\n    padding-top: 20px;\n    background-color: white;\n    border-radius: 0 0 20px 20px;\n    min-height: 900px;\n    justify-content: flex-start;\n  }\n\n  .fs-sectionbumper {\n    border-bottom: none;\n    border-radius: 20px 20px 0 0;\n    background: rgb(255 255 255 / 15%);\n    backdrop-filter: blur(5px);\n  }\n\n  .fs-columnspositions {\n    position: relative;\n    margin-top: 40px;\n    min-height: 0;\n  }\n  .fs-chip {\n    position: absolute;\n    top: -14px;\n    z-index: 1;\n  }\n  .fs-col-origin {\n    margin-right: 5px;\n  }\n  .fs-col-destination {\n    margin-left: 5px;\n  }\n\n  .fs-mainbutton {\n    cursor: pointer;\n  }\n\n  .fs-actionmessage {\n    display: block;\n    min-height: 70px;\n  }\n\n  .fs-message-1 {\n    font-weight: 600;\n    font-size: 18px;\n  }\n  .fs-message-2 {\n    color: rgba(36, 17, 48, 0.5);\n    font-size: 14px;\n    min-height: 24px;\n  }\n\n  .fs-spinner {\n    width: 20px;\n    height: 20px;\n    margin-left: 10px;\n    animation: spinner 1.5s linear 0s infinite;\n  }\n\n  @keyframes spinner {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n  .w-100 {\n    width: 100%;\n  }\n\n  .align-center {\n    text-align: center;\n  }\n</style>\n",
    "<script>\n  import Metamask from './metamask.svelte';\n  import { signer, addresses } from './metamask.mjs';\n\n  export let address;\n  export let exclude;\n\n  $: address && console.log('LISTBOX ADDRESS address', address);\n  $: exclude && console.log('LISTBOX ADDRESS exclude', exclude);\n\n  let isDropdownOpen = false;\n\n  const _exclude = (_address) => {\n    return _address === exclude || _address === address;\n  };\n  const isSigner = (_address) => {\n    return $signer && _address == $signer;\n  };\n  const setValue = (_address) => {\n    if (_address !== exclude) address = _address;\n    console.log('setValue |', exclude, '|', _address, '|', _address !== exclude, '=>', address);\n    isDropdownOpen = false;\n  };\n  const truncateAddress = (_address) => (_address ? _address.substr(0, 12) + '...' + _address.substring(_address.length - 4, _address.length) : '');\n</script>\n\n{#key $signer}\n  {#key exclude}\n      <div data-hover=\"\" data-delay=\"0\" class=\"adressdropdown w-dropdown\" style=\"z-index: 901;\">\n        <div\n          class=\"dropdown-toggle addresses w-dropdown-toggle w--open\"\n          on:click={() => (isDropdownOpen = !isDropdownOpen)}\n          id=\"w-dropdown-toggle-0\"\n          aria-controls=\"w-dropdown-list-0\"\n          aria-haspopup=\"menu\"\n          aria-expanded=\"true\"\n          role=\"button\"\n          tabindex=\"0\"\n        >\n          <div class=\"arrow lightmode w-icon-dropdown-toggle\" />\n          <div id=\"platformAddressLogo\" class=\"buttondisk\">\n            <img src=\"images/assets/aave_logo.svg\" loading=\"lazy\" id=\"platformLogo\" alt=\"\" class=\"placeholderimage\" />\n          </div>\n          <div id=\"chosenAddressORG\" class=\"textlightmode\">\n            {address && address != '-' ? truncateAddress(address) : 'Select address'}\n          </div>\n        </div>\n        <nav class:w--open={isDropdownOpen} class=\"dropdown-list w-dropdown-list\" id=\"w-dropdown-list-0\" aria-labelledby=\"w-dropdown-toggle-0\">\n          {#each $addresses as addr, i}\n            {#if _exclude(addr)}\n              <div id=\"accItem-{i + 1}\" class=\"dropdownitemexclude w-dropdown-link\">\n                {truncateAddress(addr)}\n                {#if isSigner(addr)}*{/if}\n              </div>\n            {:else}\n              <div on:click={() => setValue(addr)} id=\"accItem-{i + 1}\" class=\"dropdownitem w-dropdown-link\" style=\"cursor: pointer;\" tabindex=\"0\">\n                {truncateAddress(addr)}\n                {#if isSigner(addr)}*{/if}\n              </div>\n            {/if}\n          {/each}\n          <div on:click={() => setValue('-')} href=\"#\" id=\"accItem-0\" class=\"dropdownitem w-dropdown-link\" style=\"cursor: pointer;\" tabindex=\"0\">-</div>\n        </nav>\n        <Metamask />\n\n      </div>\n  {/key}\n{/key}\n\n<style>\n  .dropdown-list {\n    border-radius: 10px;\n  }\n\n  .buttondisk {\n    flex-shrink: 0;\n    height: 42px;\n    width: 42px;\n  }\n  .dropdownitemexclude {\n    color: #ccc;\n  }\n</style>\n"
  ],
  "names": [],
  "mappings": "AA8BE,aAAa,eAAC,CAAC,AACb,MAAM,CAAE,OAAO,AACjB,CAAC,AAED,wBAAwB,eAAC,CAAC,AACxB,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,AACzB,CAAC,AACD,aAAa,eAAC,CAAC,AACb,KAAK,CAAE,GAAG,AACZ,CAAC,AAED,gBAAgB,eAAC,CAAC,AAChB,OAAO,CAAE,CAAC,AACZ,CAAC;AC9BD,QAAQ,eAAC,CAAC,AACR,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,EAAE,CACR,GAAG,CAAE,EAAE,CACP,KAAK,CAAE,EAAE,CACT,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,CAAC,CACV,OAAO,CAAE,WAAW,CACpB,OAAO,CAAE,YAAY,CACrB,OAAO,CAAE,WAAW,CACpB,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,cAAc,CAAE,GAAG,CACnB,kBAAkB,CAAE,UAAU,CAC9B,qBAAqB,CAAE,MAAM,CAC7B,sBAAsB,CAAE,GAAG,CAC3B,kBAAkB,CAAE,GAAG,CACvB,cAAc,CAAE,GAAG,CACnB,gBAAgB,CAAE,MAAM,CACxB,uBAAuB,CAAE,MAAM,CAC/B,aAAa,CAAE,MAAM,CACrB,eAAe,CAAE,MAAM,CACvB,iBAAiB,CAAE,MAAM,CACzB,mBAAmB,CAAE,MAAM,CAC3B,cAAc,CAAE,MAAM,CACtB,WAAW,CAAE,MAAM,CACnB,gBAAgB,CAAE,WAAW,CAC7B,UAAU,CAAE,IAAI,AAClB,CAAC,AAED,gBAAgB,eAAC,CAAC,AAChB,QAAQ,CAAE,KAAK,CACf,OAAO,CAAE,WAAW,CACpB,OAAO,CAAE,YAAY,CACrB,OAAO,CAAE,WAAW,CACpB,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,MAAM,CACjB,YAAY,CAAE,GAAG,CACjB,WAAW,CAAE,GAAG,CAChB,aAAa,CAAE,KAAK,CACpB,YAAY,CAAE,KAAK,CACnB,kBAAkB,CAAE,UAAU,CAC9B,qBAAqB,CAAE,MAAM,CAC7B,sBAAsB,CAAE,GAAG,CAC3B,kBAAkB,CAAE,GAAG,CACvB,cAAc,CAAE,GAAG,CACnB,gBAAgB,CAAE,GAAG,CACrB,uBAAuB,CAAE,QAAQ,CACjC,aAAa,CAAE,GAAG,CAClB,eAAe,CAAE,QAAQ,CACzB,iBAAiB,CAAE,MAAM,CACzB,mBAAmB,CAAE,MAAM,CAC3B,cAAc,CAAE,MAAM,CACtB,WAAW,CAAE,MAAM,CACnB,kBAAkB,CAAE,OAAO,CAC3B,mBAAmB,CAAE,OAAO,CAC5B,UAAU,CAAE,OAAO,CACnB,gBAAgB,CAAE,CAAC,CACnB,YAAY,CAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CACtB,QAAQ,CAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAClB,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,IAAI,AAChB,CAAC,AAED,WAAW,eAAC,CAAC,AACX,OAAO,CAAE,WAAW,CACpB,OAAO,CAAE,YAAY,CACrB,OAAO,CAAE,WAAW,CACpB,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,KAAK,CACjB,aAAa,CAAE,GAAG,CAClB,kBAAkB,CAAE,QAAQ,CAC5B,qBAAqB,CAAE,MAAM,CAC7B,sBAAsB,CAAE,MAAM,CAC9B,kBAAkB,CAAE,MAAM,CAC1B,cAAc,CAAE,MAAM,CACtB,gBAAgB,CAAE,MAAM,CACxB,uBAAuB,CAAE,MAAM,CAC/B,aAAa,CAAE,MAAM,CACrB,eAAe,CAAE,MAAM,CACvB,iBAAiB,CAAE,MAAM,CACzB,mBAAmB,CAAE,MAAM,CAC3B,cAAc,CAAE,MAAM,CACtB,WAAW,CAAE,MAAM,CACnB,gBAAgB,CAAE,IAAI,kCAAkC,CAAC,CACzD,mBAAmB,CAAE,GAAG,CAAC,GAAG,CAC5B,eAAe,CAAE,KAAK,CACtB,iBAAiB,CAAE,SAAS,CAC5B,qBAAqB,CAAE,KAAK,AAC9B,CAAC,AAED,cAAc,eAAC,CAAC,AACd,WAAW,CAAE,GAAG,CAChB,cAAc,CAAE,GAAG,AACrB,CAAC,AAED,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACpC,gBAAgB,eAAC,CAAC,AAChB,YAAY,CAAE,IAAI,CAClB,WAAW,CAAE,IAAI,AACnB,CAAC,AACH,CAAC,AAED,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACpC,gBAAgB,eAAC,CAAC,AAChB,YAAY,CAAE,IAAI,CAClB,WAAW,CAAE,IAAI,AACnB,CAAC,AACH,CAAC,AAED,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,MAAM,CAAC,AAAC,CAAC,AACrC,gBAAgB,eAAC,CAAC,AAChB,aAAa,CAAE,GAAG,CAClB,YAAY,CAAE,GAAG,CACjB,gBAAgB,CAAE,GAAG,CACrB,uBAAuB,CAAE,QAAQ,CACjC,aAAa,CAAE,GAAG,CAClB,eAAe,CAAE,QAAQ,AAC3B,CAAC,AACH,CAAC;AC6HD,IAAI,eAAC,CAAC,AACJ,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,YAAY,CAAE,GAAG,CACjB,WAAW,CAAE,GAAG,AAClB,CAAC,AAED,gBAAgB,eAAC,CAAC,AAChB,OAAO,CAAE,KAAK,AAChB,CAAC,AAED,oBAAoB,eAAC,CAAC,AACpB,UAAU,CAAE,IAAI,AAClB,CAAC,AAED,kBAAkB,eAAC,CAAC,AAClB,SAAS,CAAE,KAAK,AAClB,CAAC,AACD,kBAAkB,eAAC,CAAC,AAClB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,AACxB,CAAC,AAED,0BAA0B,eAAC,CAAC,AAC1B,WAAW,CAAE,MAAM,CACnB,MAAM,CAAE,OAAO,AACjB,CAAC,AAED,gBAAgB,eAAC,CAAC,AAChB,aAAa,CAAE,IAAI,AACrB,CAAC,AAED,gBAAgB,QAAQ,eAAC,CAAC,AACxB,kBAAkB,CAAE,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CACjD,eAAe,CAAE,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAC9C,UAAU,CAAE,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,AAC3C,CAAC,AACD,aAAa,QAAQ,eAAC,CAAC,AACrB,kBAAkB,CAAE,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CACjD,eAAe,CAAE,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAC9C,UAAU,CAAE,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,AAC3C,CAAC,AAED,oBAAoB,eAAC,CAAC,AACpB,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,CAC9B,WAAW,CAAE,MAAM,CACnB,UAAU,CAAE,IAAI,AAClB,CAAC,AAED,MAAM,eAAC,CAAC,AACN,UAAU,CAAE,IAAI,AAClB,CAAC,AAID,WAAW,eAAC,CAAC,AACX,WAAW,CAAE,CAAC,CACd,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,AACb,CAAC,AAED,WAAW,eAAC,CAAC,AACX,kBAAkB,CAAE,IAAI,CAAC,IAAI,AAC/B,CAAC,AACD,GAAG,eAAC,CAAC,AACH,SAAS,CAAE,IAAI,AACjB,CAAC,AAED,eAAe,eAAC,CAAC,AACf,MAAM,CAAE,OAAO,AACjB,CAAC;AC0BD,mBAAmB,eAAC,CAAC,AACnB,WAAW,CAAE,IAAI,CACjB,gBAAgB,CAAE,KAAK,CACvB,aAAa,CAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAC5B,UAAU,CAAE,KAAK,CACjB,eAAe,CAAE,UAAU,AAC7B,CAAC,AAED,iBAAiB,eAAC,CAAC,AACjB,aAAa,CAAE,IAAI,CACnB,aAAa,CAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAC5B,UAAU,CAAE,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAClC,eAAe,CAAE,KAAK,GAAG,CAAC,AAC5B,CAAC,AAED,oBAAoB,eAAC,CAAC,AACpB,QAAQ,CAAE,QAAQ,CAClB,UAAU,CAAE,IAAI,CAChB,UAAU,CAAE,CAAC,AACf,CAAC,AACD,QAAQ,eAAC,CAAC,AACR,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,KAAK,CACV,OAAO,CAAE,CAAC,AACZ,CAAC,AAQD,cAAc,eAAC,CAAC,AACd,MAAM,CAAE,OAAO,AACjB,CAAC,AAED,iBAAiB,eAAC,CAAC,AACjB,OAAO,CAAE,KAAK,CACd,UAAU,CAAE,IAAI,AAClB,CAAC,AAED,aAAa,eAAC,CAAC,AACb,WAAW,CAAE,GAAG,CAChB,SAAS,CAAE,IAAI,AACjB,CAAC,AACD,aAAa,eAAC,CAAC,AACb,KAAK,CAAE,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAC5B,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,IAAI,AAClB,CAAC,AAED,WAAW,eAAC,CAAC,AACX,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,WAAW,CAAE,IAAI,CACjB,SAAS,CAAE,sBAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,QAAQ,AAC5C,CAAC,AAED,WAAW,sBAAQ,CAAC,AAClB,IAAI,AAAC,CAAC,AACJ,SAAS,CAAE,OAAO,IAAI,CAAC,AACzB,CAAC,AACD,EAAE,AAAC,CAAC,AACF,SAAS,CAAE,OAAO,MAAM,CAAC,AAC3B,CAAC,AACH,CAAC,AACD,MAAM,eAAC,CAAC,AACN,KAAK,CAAE,IAAI,AACb,CAAC,AAED,aAAa,eAAC,CAAC,AACb,UAAU,CAAE,MAAM,AACpB,CAAC;ACvWD,cAAc,eAAC,CAAC,AACd,aAAa,CAAE,IAAI,AACrB,CAAC,AAED,WAAW,eAAC,CAAC,AACX,WAAW,CAAE,CAAC,CACd,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,AACb,CAAC,AACD,oBAAoB,eAAC,CAAC,AACpB,KAAK,CAAE,IAAI,AACb,CAAC"
}